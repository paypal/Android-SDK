apply plugin: 'maven-publish'
apply plugin: 'signing'


ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID') ?: ''
ext["signing.password"] = System.getenv('SIGNING_KEY_PASSWORD') ?: ''
ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_KEY_FILE') ?: ''
ext["SONATYPE_NEXUS_USERNAME"] = System.getenv('SONATYPE_NEXUS_USERNAME') ?: ''
ext["SONATYPE_NEXUS_PASSWORD"] = System.getenv('SONATYPE_NEXUS_PASSWORD') ?: ''


afterEvaluate {
    android.libraryVariants.each { variant ->
        def variantName = variant.name
        def resolvedVersion = project.version
        publishing.publications.create variantName, MavenPublication, {
            println "$variantName resolvedVersion: ${resolvedVersion}  ${group} ${project.name}"
            groupId group
            version resolvedVersion
            artifactId project.name
            from components."$variantName"
            artifact androidSourcesJar

            pom {
                name = POM_NAME
                packaging = POM_PACKAGING
                description = POM_DESCRIPTION
                url = POM_URL
                licenses {
                    license {
                        name = POM_LICENCE_NAME
                        url = POM_LICENCE_URL
                    }
                }
                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                        email = POM_DEVELOPER_EMAIL
                    }
                }
                scm {
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                    url = POM_SCM_URL
                }
            }
        }
    }

    publishing {
        repositories {
            maven {
                credentials {
                    username SONATYPE_NEXUS_USERNAME
                    password SONATYPE_NEXUS_PASSWORD
                }
                if (project.version.endsWith('-SNAPSHOT')) {
                    url 'https://oss.sonatype.org/content/repositories/snapshots/'
                } else {
                    url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                }
            }
        }
    }

//    signing {
//        sign publishing.publications
//        sign configurations.archives
//    }
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
    from android.sourceSets.main.kotlin.srcDirs
}

artifacts {
    archives androidSourcesJar
}